# First Stage:
# Start building the frontend and backend in parallel.
# Then testing the frontend and backend in parallel.
# If both builds and tests complete succefully, then go to the next stage.
#
# Second Stage:
# Push the backend and frontend to production servers.
jobs:
  include:
    - stage: build frontend & backend
      language: node
      node_js: 8.5
      env:
      - BACKEND=http://127.0.0.1.xip.io:3000
      - FRONTEND=http://localhost:8081
      - PORT=8081
      script:
      - cd frontend
      - npm i
      - npm run build
    - stage: build frontend & backend
      language: node
      node_js: 8.5
      script:
      - cd backend
      - npm i    
    - stage: deploy
      language: generic
      script: skip
      deploy:
        provider: script
        script: echo "should deploy frontend"
    - stage: deploy
      language: generic
      script: skip
      deploy:
        provider: script
        script: echo "should deploy backend"
cache:
  directories:
    - frontend/node_modules
    - backend/node_modules
    - node_modules

# if [ "$TRAVIS_PULL_REQUEST" = "false" ];fi;    

# deploy:
#   provider: gcs
#   access_key_id: "GCS Interoperable Access Key ID"
#   secret_access_key: "GCS Interoperable Access Secret"
#   bucket: "GCS Bucket"
#   skip_cleanup: true
#   acl: public-read
#   local-dir: directory-name

