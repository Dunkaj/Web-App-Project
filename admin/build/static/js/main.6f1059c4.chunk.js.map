{"version":3,"sources":["providers/data.js","providers/auth.js","components/items/users.js","components/items/leads.js","components/items/transactions.js","components/items/auctions.js","components/items/bets.js","components/items/reviews.js","App.js","serviceWorker.js","index.js"],"names":["dataProvider","simpleRestProvider","login","username","password","request","Request","method","body","JSON","stringify","headers","Headers","fetch","then","response","status","Error","statusText","json","token","decodedToken","decodeJwt","localStorage","setItem","permissions","logout","removeItem","checkError","error","Promise","reject","resolve","checkAuth","getItem","getPermissions","role","roles","id","UserFilter","props","Filter","NumberInput","source","TextInput","UserList","List","bulkActionButtons","filters","Datagrid","NumberField","TextField","EmailField","BooleanField","DateField","EditButton","UserEdit","Edit","SimpleForm","disabled","SelectInput","choices","optionText","yesNo","industries","contentUpdates","LeadFilter","LeadList","TransactionFilter","TransactionList","showTime","AuctionFilter","AuctionList","BetFilter","BetList","ReviewFilter","ReviewList","App","Admin","authProvider","Resource","name","icon","PersonIcon","list","edit","AccessibilityIcon","AccountBalanceWalletIcon","AccountBalanceIcon","MoneyIcon","StarHalfIcon","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.6f1059c4.chunk.js","sourcesContent":["import simpleRestProvider from 'ra-data-simple-rest'\nconst apiUrl = '/api/admin'\n\nconst dataProvider = simpleRestProvider(apiUrl)\n\nexport default dataProvider\n","import decodeJwt from 'jwt-decode';\n\nexport default {\n    login: ({username, password}) => {\n        const request = new Request('/api/admin/authenticate/login', {\n            method: 'POST',\n            body: JSON.stringify({username, password}),\n            headers: new Headers({'Content-Type': 'application/json'}),\n        });\n        return fetch(request)\n            .then(response => {\n                if (response.status < 200 || response.status >= 300) {\n                    throw new Error(response.statusText);\n                }\n                return response.json();\n            })\n            .then(({token}) => {\n                const decodedToken = decodeJwt(token);\n                localStorage.setItem('token', token);\n                localStorage.setItem('permissions', decodedToken.permissions);\n            });\n    },\n    logout: () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('permissions');\n\n        const request = new Request('/api/admin/authenticate/logout', {\n            method: 'POST',\n            headers: new Headers({'Content-Type': 'application/json'}),\n        });\n        return fetch(request)\n            .then(response => {\n                if (response.status < 200 || response.status >= 300) {\n                    throw new Error(response.statusText);\n                }\n            })\n    },\n    checkError: (error) => {\n        const status = error.status;\n        if (status === 401 || status === 403) {\n            localStorage.removeItem('token');\n            return Promise.reject();\n        }\n        return Promise.resolve();\n    },\n    checkAuth: () => {\n        return localStorage.getItem('token') ? Promise.resolve() : Promise.reject();\n    },\n    getPermissions: () => {\n        const role = localStorage.getItem('permissions');\n        return role ? Promise.resolve(role) : Promise.reject();\n    }\n};\n","import React from 'react'\nimport {\n    List,\n    Datagrid,\n    TextField,\n    NumberField,\n    DateField,\n    Filter,\n    NumberInput,\n    TextInput,\n    EmailField,\n    BooleanField,\n    BooleanInput,\n    Edit,\n    SimpleForm,\n    EditButton,\n    SelectInput\n} from 'react-admin'\n\nconst roles = [{id: 'user'}, {id: 'admin'}]\n\nconst UserFilter = (props) => (\n    <Filter {...props}>\n        <NumberInput source='id'/>\n        <TextInput source='fname'/>\n        <TextInput source='lname'/>\n        <TextInput source='email'/>\n        <NumberInput source='balance'/>\n        <NumberInput source='rating'/>\n        <NumberInput source='numberReviews'/>\n        <TextInput source='country'/>\n        <TextInput source='phone'/>\n        <TextInput source='company'/>\n        <TextInput source='wallet'/>\n        <TextInput source='role'/>\n        {/*<BooleanInput source='getNotifications'/>*/}\n        {/*<BooleanInput source='getEmails'/>*/}\n    </Filter>\n);\n\nexport const UserList = props => (\n    <List {...props} bulkActionButtons={false} filters={<UserFilter/>}>\n        <Datagrid>\n            <NumberField source='id'/>\n            <TextField source='fname'/>\n            <TextField source='lname'/>\n            <EmailField source='email'/>\n            <NumberField source='balance'/>\n            <NumberField source='rating'/>\n            <NumberField source='numberReviews'/>\n            <TextField source='country'/>\n            <TextField source='phone'/>\n            <TextField source='company'/>\n            <TextField source='wallet'/>\n            <BooleanField source='getNotifications'/>\n            <BooleanField source='getEmails'/>\n            <TextField source='favorites'/>\n            <TextField source='role'/>\n            <DateField source='created'/>\n            <EditButton/>\n        </Datagrid>\n    </List>\n)\n\nexport const UserEdit = props => (\n    <Edit {...props} >\n        <SimpleForm>\n            <NumberInput source='id' disabled/>\n            <TextInput source='fname' disabled/>\n            <TextInput source='lname' disabled/>\n            <SelectInput source='role' choices={roles} optionText='id'/>\n        </SimpleForm>\n    </Edit>\n)\n","import React from 'react'\nimport {\n    List,\n    Datagrid,\n    TextField,\n    NumberField,\n    BooleanField,\n    DateField,\n    Filter,\n    NumberInput,\n    TextInput,\n    EmailField,\n    BooleanInput,\n    SelectInput\n} from 'react-admin'\n\nconst yesNo = [{id: 'Yes'}, {id: 'No'}]\nconst industries = [{id: 'Website building'}, {id: 'Crypto'}, {id: 'Insurance'}, {id: 'Loans'}]\nconst contentUpdates = [{id: 'Mostly Static'}, {id: 'Dynamic'}]\n\nconst LeadFilter = (props) => (\n    <Filter {...props}>\n        <NumberInput source='id'/>\n        <NumberInput source='ownerId'/>\n        <TextInput source='telephone'/>\n        <TextInput source='email'/>\n        <NumberInput source='bought_from'/>\n        <SelectInput source='industry' choices={industries} optionText='id'/>\n        <SelectInput source='content_updates' choices={contentUpdates} optionText='id'/>\n        <TextInput source='content_updates'/>\n        <NumberInput source='budget'/>\n        <SelectInput source='mobile_design' choices={yesNo} optionText='id'/>\n        <SelectInput source='seo' choices={yesNo} optionText='id'/>\n        <SelectInput source='e_commerce' choices={yesNo} optionText='id'/>\n        <SelectInput source='content_management' choices={yesNo} optionText='id'/>\n        <SelectInput source='blog' choices={yesNo} optionText='id'/>\n        <SelectInput source='hosting' choices={yesNo} optionText='id'/>\n        <TextInput source='comments'/>\n        {/*<BooleanInput source='favorite'/>*/}\n        {/*<BooleanInput source='active'/>*/}\n        {/*<BooleanInput source='forSale'/>*/}\n        {/*<BooleanInput source='isReview'/>*/}\n    </Filter>\n);\n\nexport const LeadList = props => (\n    <List {...props} bulkActionButtons={false} filters={<LeadFilter/>}>\n        <Datagrid>\n            <NumberField source='id'/>\n            <NumberField source='ownerId'/>\n            <TextField source='telephone'/>\n            <EmailField source='email'/>\n            <TextField source='bought_from'/>\n            <TextField source='industry'/>\n            <TextField source='content_updates'/>\n            <TextField source='functionality'/>\n            <TextField source='mobile_design'/>\n            <TextField source='seo'/>\n            <TextField source='content_management'/>\n            <TextField source='e_commerce'/>\n            <TextField source='blog'/>\n            <TextField source='languages'/>\n            <NumberField source='budget'/>\n            <TextField source='hosting'/>\n            <TextField source='comments'/>\n            <BooleanField source='favorite'/>\n            <BooleanField source='active'/>\n            <BooleanField source='forSale'/>\n            <BooleanField source='isReview'/>\n            <DateField source='date'/>\n        </Datagrid>\n    </List>\n)\n\n","import React from 'react'\nimport {List, Datagrid, TextField, NumberField, DateField, Filter, NumberInput, TextInput} from 'react-admin'\n\nconst TransactionFilter = (props) => (\n    <Filter {...props}>\n        <NumberInput source='id'/>\n        <NumberInput source='from'/>\n        <NumberInput source='to'/>\n        <NumberInput source='value'/>\n        <TextInput source='txHash'/>\n    </Filter>\n);\n\nexport const TransactionList = props => (\n    <List {...props} bulkActionButtons={false} filters={<TransactionFilter/>}>\n        <Datagrid>\n            <NumberField source='id'/>\n            <NumberField source='from'/>\n            <NumberField source='to'/>\n            <NumberField source='value'/>\n            <TextField source='txHash'/>\n            <DateField source='date' showTime/>\n        </Datagrid>\n    </List>\n)\n","import React from 'react'\nimport {List, Datagrid, BooleanInput, NumberField, BooleanField, DateField, Filter, NumberInput} from 'react-admin'\n\nconst AuctionFilter = (props) => (\n    <Filter {...props}>\n        <NumberInput source='id'/>\n        <NumberInput source='leadId'/>\n        <NumberInput source='creatorId'/>\n        <NumberInput source='startPrice'/>\n        {/*<BooleanInput source='isClosed'/>*/}\n    </Filter>\n);\n\nexport const AuctionList = props => (\n    <List {...props} bulkActionButtons={false} filters={<AuctionFilter/>}>\n        <Datagrid>\n            <NumberField source='id'/>\n            <NumberField source='leadId'/>\n            <NumberField source='creatorId'/>\n            <NumberField source='startPrice'/>\n            <DateField source='startDate' showTime/>\n            <DateField source='endDate' showTime/>\n            <BooleanField source='isClosed'/>\n        </Datagrid>\n    </List>\n)\n","import React from 'react'\nimport {List, Datagrid, NumberField, DateField, NumberInput, Filter} from 'react-admin'\n\nconst BetFilter = (props) => (\n    <Filter {...props}>\n        <NumberInput source='id'/>\n        <NumberInput source='price'/>\n        <NumberInput source='userId'/>\n        <NumberInput source='auctionId'/>\n    </Filter>\n);\n\nexport const BetList = props => (\n    <List {...props} bulkActionButtons={false} filters={<BetFilter/>}>\n        <Datagrid>\n            <NumberField source='id'/>\n            <NumberField source='price'/>\n            <NumberField source='userId'/>\n            <NumberField source='auctionId'/>\n            <DateField source='date' showTime/>\n        </Datagrid>\n    </List>\n)\n","import React from 'react'\nimport {List, Datagrid, TextField, NumberField, DateField, Filter, NumberInput, TextInput} from 'react-admin'\n\nconst ReviewFilter = (props) => (\n    <Filter {...props}>\n        <NumberInput source='id'/>\n        <NumberInput source='toUserId'/>\n        <NumberInput source='fromUserId'/>\n        <NumberInput source='rating'/>\n        <TextInput source='comment'/>\n    </Filter>\n);\n\nexport const ReviewList = props => (\n    <List {...props} bulkActionButtons={false} filters={<ReviewFilter/>}>\n        <Datagrid>\n            <NumberField source='id'/>\n            <NumberField source='toUserId'/>\n            <NumberField source='fromUserId'/>\n            <NumberField source='rating'/>\n            <TextField source='comment'/>\n            <DateField source='date' showTime/>\n        </Datagrid>\n    </List>\n)\n","import React from 'react';\nimport {Admin, Resource} from 'react-admin'\n\nimport dataProvider from './providers/data'\nimport authProvider from './providers/auth';\n\nimport PersonIcon from '@material-ui/icons/Person'\nimport AccessibilityIcon from '@material-ui/icons/Accessibility';\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport MoneyIcon from '@material-ui/icons/Money';\nimport StarHalfIcon from '@material-ui/icons/StarHalf';\n\nimport {UserList, UserEdit} from './components/items/users'\nimport {LeadList} from './components/items/leads'\nimport {TransactionList} from './components/items/transactions'\nimport {AuctionList} from './components/items/auctions'\nimport {BetList} from './components/items/bets'\nimport {ReviewList} from './components/items/reviews'\n\nconst App = () => (\n            <Admin dataProvider={dataProvider} authProvider={authProvider}>\n            <Resource name='users' icon={PersonIcon} list={UserList} edit={UserEdit}/>\n            <Resource name='leads' icon={AccessibilityIcon} list={LeadList}/>\n            <Resource name='transactions' icon={AccountBalanceWalletIcon} list={TransactionList}/>\n            <Resource name='auctions' icon={AccountBalanceIcon} list={AuctionList}/>\n            <Resource name='bets' icon={MoneyIcon} list={BetList}/>\n            <Resource name='reviews' icon={StarHalfIcon} list={ReviewList}/>\n    </Admin>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}